<% auth_types   =   [:client, :socks] %>
<% rule_types   =   [:pass, :block] %>

errorlog: <%= node[:dante][:logging][:error_log] %>
logoutput: <%= node[:dante][:logging][:log_output] %>
debug: <%= node[:dante][:logging][:debug] %>

<% if node[:dante][:internal][:protocol] %>
internal.protocol: <%= node[:dante][:internal][:protocol] %>
<% end %>

<% if node[:dante][:server][:ip_addresses] && node[:dante][:server][:ip_addresses].any? && node[:dante][:server][:port] %>
<% node[:dante][:server][:ip_addresses].each do |ip_address| %>
internal: <%= ip_address %> port = <%= node[:dante][:server][:port] %>
<% end %>
<% elsif node[:dante][:internal][:internals] && node[:dante][:internal][:internals].any? %>
<% node[:dante][:internal][:internals].each do |interface, port| %>
internal: <%= interface %> port = <%= port %>
<% end %>
<% end %>


<% if node[:dante][:external][:protocol] %>
external.protocol: <%= node[:dante][:external][:protocol] %>
<% end %>

<% if node[:dante][:external][:rotation] %>
external.rotation: <%= node[:dante][:external][:rotation] %>
<% end %>

<% if node[:dante][:server][:ip_addresses] && node[:dante][:server][:ip_addresses].any? && node[:dante][:server][:port] %>
<% node[:dante][:server][:ip_addresses].each do |ip_address| %>
external: <%= ip_address %>
<% end %>
<% elsif node[:dante][:external][:externals] && node[:dante][:external][:externals].any? %>
<% node[:dante][:external][:externals].each do |interface| %>
external: <%= interface %>
<% end %>
<% end %>


<% auth_types.each do |type| %>
<% node[:dante][:auth][:methods][type].each do |auth_method| %>
<%= type %>method: <%= auth_method %>
<% end if node[:dante][:auth][:methods][type] && node[:dante][:auth][:methods][type].any? %>
<% end %>

<% if node[:dante][:auth][:users][:privileged] %>
user.privileged: <%= node[:dante][:auth][:users][:privileged] %>
<% end %>

<% if node[:dante][:auth][:users][:unprivileged] %>
user.unprivileged: <%= node[:dante][:auth][:users][:unprivileged] %>
<% end %>

<% if node[:dante][:auth][:users][:libwrap] %>
user.libwrap: <%= node[:dante][:auth][:users][:libwrap] %>
<% end %>

<% if node[:dante][:compatibility] %>
compatibility: <%= node[:dante][:compatibility] %>
<% end %>

<% node[:dante][:extensions].each do |extension| %>
extension: <%= extension %>
<% end if node[:dante][:extensions] && node[:dante][:extensions].any? %>

<% if node[:dante][:connection][:negotiate_timeout] %>
timeout.negotiate: <%= node[:dante][:connection][:negotiate_timeout] %>
<% end %>

<% if node[:dante][:connection][:io_timeout] %>
timeout.io: <%= node[:dante][:connection][:io_timeout] %>
<% end %>

<% if node[:dante][:connection][:src_host] %>
srchost: <%= node[:dante][:connection][:src_host] %>
<% end %>

<% auth_types.each do |type| %>
<% rule_types.each do |rule_type| %>
<% node[:dante][:rules][type][rule_type].each do |rule| %>
<%= type %> <%= rule_type %>
{
  from: <%= rule[:from] %><%= " port #{rule[:port_range]}" if rule[:port_range] %> to: <%= rule[:to] %>
  <%= "log: #{rule[:log]}"                    if rule[:log] -%>
  <%= "protocol: #{rule[:protocol]}"          if rule[:protocol] -%>
  <%= "command: #{rule[:command]}"            if rule[:command] -%>
  <%= "libwrap: #{rule[:libwrap]}"            if rule[:libwrap] -%>
  <%= "clientmethod: #{rule[:clientmethod]}"  if rule[:clientmethod] -%>
  <%= "socksmethod: #{rule[:socksmethod]}"    if rule[:socksmethod] -%>
  
}

<% end if node[:dante][:rules][type][rule_type] && node[:dante][:rules][type][rule_type].any? %>
<% end %>
<% end %>

<% node[:dante][:routes].each do |route| %>
route {
  <%= route %>
}
<% end if node[:dante][:routes] && node[:dante][:routes].any? %>